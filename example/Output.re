/* ** This file has been automatically generated by ts2reason ** */

type t_TODO;
type t = t_autoprefixer_Options;

module Numbers = {
  [@bs.module "numbers"] external x: int = "x";
  [@bs.module "numbers"] external add: (~a: int, ~b: int) => int = "add";
}

module Autoprefixer = {
  
  module Options = {
    type t = t_autoprefixer_Options;
    
    let getBrowsers = (_inst: t): t_TODO => [%bs.raw {| _inst.browsers |}];
    let setBrowsers = (_inst: t, _value: t_TODO): t_TODO => [%bs.raw {| _inst.browsers = _value |}];
    
    
    let getEnv = (_inst: t): string => [%bs.raw {| _inst.env |}];
    let setEnv = (_inst: t, _value: string): string => [%bs.raw {| _inst.env = _value |}];
    
    
    let getCascade = (_inst: t): bool => [%bs.raw {| _inst.cascade |}];
    let setCascade = (_inst: t, _value: bool): bool => [%bs.raw {| _inst.cascade = _value |}];
    
    
    let getAdd = (_inst: t): bool => [%bs.raw {| _inst.add |}];
    let setAdd = (_inst: t, _value: bool): bool => [%bs.raw {| _inst.add = _value |}];
    
    
    let getRemove = (_inst: t): bool => [%bs.raw {| _inst.remove |}];
    let setRemove = (_inst: t, _value: bool): bool => [%bs.raw {| _inst.remove = _value |}];
    
    
    let getSupports = (_inst: t): bool => [%bs.raw {| _inst.supports |}];
    let setSupports = (_inst: t, _value: bool): bool => [%bs.raw {| _inst.supports = _value |}];
    
    
    let getFlexbox = (_inst: t): t_TODO => [%bs.raw {| _inst.flexbox |}];
    let setFlexbox = (_inst: t, _value: t_TODO): t_TODO => [%bs.raw {| _inst.flexbox = _value |}];
    
    
    let getGrid = (_inst: t): bool => [%bs.raw {| _inst.grid |}];
    let setGrid = (_inst: t, _value: bool): bool => [%bs.raw {| _inst.grid = _value |}];
    
    
    let getStats = (_inst: t): 'a => [%bs.raw {| _inst.stats |}];
    let setStats = (_inst: t, _value: 'a): 'a => [%bs.raw {| _inst.stats = _value |}];
    
    
    let getIgnoreUnknownVersions = (_inst: t): bool => [%bs.raw {| _inst.ignoreUnknownVersions |}];
    let setIgnoreUnknownVersions = (_inst: t, _value: bool): bool => [%bs.raw {| _inst.ignoreUnknownVersions = _value |}];
    
    let myMethod = (_inst: t, _a: string, _b: bool): string => [%bs.raw {| _inst.myMethod(_a, _b) |}];
  }
}

